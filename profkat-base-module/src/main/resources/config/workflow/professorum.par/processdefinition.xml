<?xml version="1.0" encoding="UTF-8"?>

<process-definition
  xmlns="urn:jbpm.org:jpdl-3.1"  name="professorum">

  <!-- SWIMLANES (= process roles) -->

  <swimlane name="initiator" />
  
  <swimlane name="cpr-editor">
	<assignment class="org.mycore.frontend.workflowengine.jbpm.MCRPooledActorAssignmentHandler">
		<groupName>editprofessorum</groupName>
	</assignment>  
  </swimlane>
  
  <swimlane name="technicalAdministration">
    <assignment class="org.mycore.frontend.workflowengine.jbpm.MCRPooledActorAssignmentHandler">
		<groupName>admin</groupName>
	</assignment>       
  </swimlane>
   
  <start-state name="start">
     <task name="initialization" swimlane="initiator">
     </task>     
     <transition name="go2professorInitialized" to="processInitialized">
      	<action class="org.mycore.frontend.workflowengine.jbpm.professorum.MCRCreateDocumentAction" />
     </transition>
     <transition name="go2processEditInitialized" to="processEditInitialized" />
  </start-state>

  <task-node name="processInitialized">
     <transition name="go2isInitiatorsEmailAddressAvailable" to="isInitiatorsEmailAddressAvailable" />  
  </task-node>

  <task-node name="processEditInitialized">
     <task name="taskprocessEditInitialized" swimlane="initiator" />
     <transition name="go2canDocumentBeSubmitted" to="canDocumentBeSubmitted" />
  </task-node>

  <decision name="isInitiatorsEmailAddressAvailable">
     <transition name="no" to="getInitiatorsEmailAddress"> 
        <condition expression="#{empty(contextInstance.variables['initiatorEmail'])}"/>
     </transition>
     <transition name="yes" to="documentCreated">
        <condition expression="#{!empty(contextInstance.variables['initiatorEmail'])}"/>
     </transition>
  </decision>
  
  <task-node name="getInitiatorsEmailAddress">
     <task name="taskGetInitiatorsEmailAddress" swimlane="initiator" />
     <transition name="go2IsInitiatorsEmailAddressAvailable" to="isInitiatorsEmailAddressAvailable" />
  </task-node>
  
  <task-node name="documentCreated">
     <task name="taskCompleteDocumentAndSendToLibrary" swimlane="initiator" />
     <transition name="go2canDocumentBeSubmitted" to="canDocumentBeSubmitted" />
  </task-node>

  <decision name="canDocumentBeSubmitted">
     <handler class="org.mycore.frontend.workflowengine.jbpm.professorum.MCRDecisionHandlerProfessorum" />
     <transition name="documentCantBeSubmitted" to="documentCreated" />
     <transition name="documentCanBeSubmitted" to="documentSubmitted" />
  </decision>
  
  <task-node name="documentSubmitted">
     <event type='node-enter'>
        <action class="org.mycore.frontend.workflowengine.jbpm.professorum.MCRDocumentSubmittedAction">
           <lockedVariables>initiator,createdDocID</lockedVariables>
        </action>
     </event> 
     <task name="taskCheckCompleteness" swimlane="cpr-editor">
     </task> 
     <transition name="go2sendBackToDocumentCreated" to="sendBackToDocumentCreated" >
        <action class="org.mycore.frontend.workflowengine.jbpm.MCRSetDefaultAclsAction">
            <varmcrid>createdDocID</varmcrid>
            <varuserid>initiator</varuserid>
        </action>
     </transition>
     <transition name="go2canDocumentBeCommitted" to="canDocumentBeCommitted" />
  </task-node>
  
  <task-node name="sendBackToDocumentCreated">
     <task name="taskEnterMessageData" swimlane="cpr-editor" />
     <transition name="go2documentCreated2" to="documentCreated">
		<action class="org.mycore.frontend.workflowengine.jbpm.MCRSendmailAction">
		   <from>atlibri@uni-rostock.de</from>
		   <to>initiator</to>
		   <replyTo>atlibri@uni-rostock.de</replyTo>
		   <subject>Sie müssen zu Ihrem Dokument Metadaten ergänzen</subject>
		   <!-- <body>Mustertext</body> -->
		   <jbpmVariableName>tmpTaskMessage</jbpmVariableName>
		</action>     
     </transition>
  </task-node>
      
  <decision name="canDocumentBeCommitted">
     <handler class="org.mycore.frontend.workflowengine.jbpm.professorum.MCRDecisionHandlerProfessorum" />
     <transition name="go2sendBackToDocumentCreated" to="sendBackToDocumentCreated" />
     <transition name="go2wasCommitmentSuccessful" to="wasCommitmentSuccessful">
        <action class="org.mycore.frontend.workflowengine.jbpm.MCRCommitObjectAction">
           <varnameOBJID>createdDocID</varnameOBJID>
           <varnameERROR>COMMITERROR</varnameERROR>
        </action>
     </transition>
  </decision>  
  
  <decision name="wasCommitmentSuccessful">
     <transition name="go2adminCheck" to="adminCheck">  
        <condition expression="#{!empty(contextInstance.variables['COMMITERROR'])}" />
     </transition>
     <transition name="go2documentCommitted" to="documentCommitted">  
        <condition expression="#{empty(contextInstance.variables['COMMITERROR'])}" />
     </transition>     
  </decision>

  <task-node name="adminCheck">
     <event type='node-enter'>
		<action class="org.mycore.frontend.workflowengine.jbpm.MCRSendmailAction">
		   <from>atlibri@uni-rostock.de</from>
		   <to>robert.stephan@uni-rostock.de</to>
		   <subject>Probleme beim Veröffentlichen eines CPR Datensatzes</subject>
		   <body>Ein CPR Datensatz konnte nicht veröffentlicht werden.</body>
		</action>          
     </event>
     <task name="taskAdminCheckCommitmentNotSuccessFul" swimlane="technicalAdministration" />
     <transition name="go2documentCommitted" to="documentCommitted" />
  </task-node>     

  <task-node name="documentCommitted">
     <event type='node-enter'>
		<action class="org.mycore.frontend.workflowengine.jbpm.professorum.MCRSendmailActionProfessorum">
		   <from>atlibri@uni-rostock.de</from>
		   <to>initiator</to>
		   <replyTo>robert.stephan@uni-rostock.de</replyTo>
		   <subject>Ihre elektronisches Dokument wurde erfolgreich veröffentlicht</subject>
		   <!-- <body>dynamic</body> -->
		   <mode>success</mode>
		</action>     
     </event>       
     <transition name="go2cleanUpWorkflowAction" to="cleanUpWorkflowAction" />
  </task-node>

  <end-state name="cleanUpWorkflowAction">
     <event type='node-enter'>
        <action class="org.mycore.frontend.workflowengine.jbpm.MCRCleanUpWorkflowAction">
           <varnameOBJID>createdDocID</varnameOBJID>
           <varnameERROR>CLEANUPERROR</varnameERROR>
        </action>
     </event>       
  </end-state>
</process-definition>