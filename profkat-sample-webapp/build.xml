<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- =================================================================== -->
<!-- MyCoRe sample application build file for use with Apache Ant        -->
<!-- $Revision$ $Date$                      -->
<!-- =================================================================== -->
<project name="Profkat Sample" default="usage" basedir=".">
	<property name="APP_NAME" value="profkat-sample" />
	<property name="PARENT_BUILD_FILE" value="${basedir}/buildfile_application.xml" />
	<property name="CONTENT_DIR" value="${basedir}/content" />
	
	<property name="HOME" value="${basedir}/target/app" />

	<property name="SOLR_DEFAULT_CONFIG_URL" value="http://artifactory.mycore.de/libs-snapshots-local/org/mycore/solr/solr-home/4.8.1-SNAPSHOT/solr-home-4.8.1-20141014.165252-1.zip" />
	<property name="SOLR_CORE_ID" value="profkat" />
	<condition property="SOLR_HOME_DIR" value="/opt/solr" else="c:\workspaces\cpr\profkat-data\solr-home">
		<os family="unix" />
	</condition>
	<condition property="SOLR_CONF_DIR" value="/opt/profkat/projects/profkat-sample-webapp/solr-conf" else="C:\workspaces\cpr\projects\profkat-sample-webapp\solr-conf">
		<os family="unix" />
	</condition>
	
	<property environment="env" />
	<condition property="env.JAVA_HOME" value="/usr/lib/java" else="c:/Programme/Java/jdk1.6.0_03">
		<os family="unix" />
	</condition>
	<condition property="ant.library.dir" value="${ant.home}/lib">
		<os family="unix" />
	</condition>
	<property name="MCR.JDBCStore.Type" value="hibernate" />
	<property name="MCR.XMLStore.Type" value="hibernate" />
	
	<import file="${PARENT_BUILD_FILE}" optional="true"/>

	<classloader name="cli-classloader" classpathref="APP_CLASSPATH" />
	<target name="init">
		<!--
		<get src="http://server.mycore.de/svn/jspdocportal/trunk/jspdocportal-module/src/build/buildfile_application.xml" dest="${basedir}" />
		-->
		
	</target>
	<target name="usage">
		<antcall target="main_build.usage" />
	</target>
	
	<target name="create.directories" depends="init">
			<taskdef name="mcr-execute" classname="org.mycore.buildtools.anttasks.MCRExecuteCommandTask" classpathref="APP_CLASSPATH" />
			<mcr-execute>
				create directory ${MCR.Editor.FileUpload.TempStoragePath}
				create directory ${MCR.LogDirectory}
				create directory ${MCR.Save.FileSystem}
				create directory ${MCR.WebContent.SaveFolder}
				create directory ${MCR.WorkflowEngine.EditDirectory.person}
				create directory ${MCR.WorkflowEngine.DeleteDirectory}
				create directory ${MCR.EHCache.diskStore.path}
			</mcr-execute>
		</target>

	<target name="create.users" depends="init">
		<mkdir dir="${basedir}/target/user_encrypted" />
		<taskdef name="mcr-execute" classname="org.mycore.buildtools.anttasks.MCRExecuteCommandTask" classpathref="APP_CLASSPATH" />

		<mcr-execute>
			update classification from file ${basedir}/content/user/mcr-roles.xml

			load permissions data from file ${CONTENT_DIR}/user/permissions.xml
     	    init superuser
            
			change to user root with alleswirdgut
			
			encrypt passwords in user xml file ${CONTENT_DIR}/user/user_administrator.xml to file ${basedir}/target/user_encrypted/user_administrator.xml
			update user from file ${basedir}/target/user_encrypted/user_administrator.xml	
			
			encrypt passwords in user xml file ${CONTENT_DIR}/user/user_editorPK.xml to file ${basedir}/target/user_encrypted/user_editorPK.xml
			update user from file ${basedir}/target/user_encrypted/user_editorPK.xml

			encrypt passwords in user xml file ${CONTENT_DIR}/user/user_editorWeb.xml to file ${basedir}/target/user_encrypted/user_editorWeb.xml
			update user from file ${basedir}/target/user_encrypted/user_editorWeb.xml
				
			load permissions data from file ${CONTENT_DIR}/user/default-object-permissions.xml
    	</mcr-execute>
	</target>
	
	<target name="create.class" depends="init">
		<taskdef name="mcr-execute" classname="org.mycore.buildtools.anttasks.MCRExecuteCommandTask" classpathref="APP_CLASSPATH" />
		<mcr-execute>
	           update all classifications from directory ${CONTENT_DIR}/classification
		</mcr-execute>
	</target>

	<target name="deploy.workflows" >
		<taskdef name="mcr-execute" classname="org.mycore.buildtools.anttasks.MCRExecuteCommandTask" classpathref="APP_CLASSPATH" />
		<mcr-execute>
			deploy workflow processdefinition from resource /config/workflow/processdefinitions/create_object_simple.bpmn20.xml   	
       	</mcr-execute>
	</target>

	<target name="update.solr.config">
		<get src="${SOLR_DEFAULT_CONFIG_URL}" dest="${SOLR_HOME_DIR}/solr-default-config.zip" />
		<delete dir="${SOLR_HOME_DIR}/cores/${SOLR_CORE_ID}/conf" />
		<mkdir  dir="${SOLR_HOME_DIR}/cores/${SOLR_CORE_ID}/conf" />
		<mkdir  dir="${SOLR_HOME_DIR}/data/${SOLR_CORE_ID}" />
		<unzip src="${SOLR_HOME_DIR}/solr-default-config.zip" dest="${SOLR_HOME_DIR}/cores/${SOLR_CORE_ID}/conf">
			<patternset>
			        <include name="/solr/collection1/conf/**"/>
			    </patternset>
			<cutdirsmapper dirs="3"/>
		</unzip>
		<copy todir="${SOLR_HOME_DIR}/cores/${SOLR_CORE_ID}/conf" overwrite="true">
			<fileset dir="${SOLR_CONF_DIR}/cores/${SOLR_CORE_ID}/conf" />
		</copy>
	</target>
	

	<target name="zip4deployment">
			<zip destfile="./target/${APP_NAME}_deploy.zip" >
				<zipfileset dir="./target/app" prefix="target/app"  />
				<zipfileset dir="./content" prefix="content" />
			    <zipfileset file="./target/buildfile_application.xml" prefix="target"/>
				<zipfileset file="build.xml" />
			    <zipfileset file="./target/${APP_NAME}.war" />
			</zip>
		</target>
</project>